
__     ______ __  __ _     ____  
\ \   / / ___|  \/  | |   |___ \ 
 \ \ / / |   | |\/| | |     __) |
  \ V /| |___| |  | | |___ / __/ 
   \_/  \____|_|  |_|_____|_____|
                                 
Author - Scott P. Morton B.S.
Advisor - Ralph M. Butler PhD.

Language spec

The format is json

The root key elements are:

        "NETWORKS": {},
        "NODES": {}
    
    And must be present!
    
 _   _ _____ _______        _____  ____  _  ______  
| \ | | ____|_   _\ \      / / _ \|  _ \| |/ / ___| 
|  \| |  _|   | |  \ \ /\ / / | | | |_) | ' /\___ \ 
| |\  | |___  | |   \ V  V /| |_| |  _ <| . \ ___) |
|_| \_|_____| |_|    \_/\_/  \___/|_| \_\_|\_\____/ 
                                                    

    "NETWORKS" are objects of this root key and contain two attributes:

        name    - string
          * driver  - Docker network driver type (bridge,none, etc.)
          * subnet  - CIDR notation (172.16.0.0/26). 3 Addresses are
                        consumed by the system. Keep this in mind
                        while modeling adn calculating subnet masks
        
    
        "NETWORKS": {
            "Net_A": {
                "driver": "bridge",
                "subnet": "172.16.0.0/26"
            }
        }
        
        "Net_A" designates the object name being described and can be any valid character string.
        This is used as a reference and is what is displayed by
            'docker network ls'
    
        "driver" is of the network types supported by Docker.  If  you have 
        questions regarding Docker network drivers please refer to the Docker 
        documentation. Most instances will be fine with "bridge"
        
        * - Indicates a required attribute
        
 _   _  ___  ____  _____ ____  
| \ | |/ _ \|  _ \| ____/ ___| 
|  \| | | | | | | |  _| \___ \ 
| |\  | |_| | |_| | |___ ___) |
|_| \_|\___/|____/|_____|____/ 
                              
    "NODES" are objects of this root key and contain five attributes and follows
    the same basic principles as "NETWORKS":

        name        - string by which Docker references the container
            hostname    - The name of the node by which system calls 
                            will be made i.e c00. Will be used to populate
                            hosts files of each node
          * image       - The Docker image pulled for creating the nodes
                            type:   'docker search vcml'
                            and 'docker pull image_name' using the image name
                            in this source attribute
          * router      - true/false will this node route between two or more
                            attached networks
          * networks    - the list of the "NETWORKS" object names this node
                            attaches to i.e. ["Net_A","Net_B"].
                            VCML2 assigns the IP Address for you and writes
                            the assignments back out to config.vcml file for
                            later reference.
            volume      - Docker allows a bind mount of a folder into the 
                            container and follows docker syntax i.e. :
                            host_source_dir:node_destination_dir
                            Do not attempt to mount your home dir directly into
                            the container users home dir as your SSH keys could be
                            manipulated! YOU HAVE BEEN WARNED!

    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["Net_A"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        }
    }


 ___ _   _ ____ _____ ____  _   _  ____ _____ ___ ___  _   _ ____  
|_ _| \ | / ___|_   _|  _ \| | | |/ ___|_   _|_ _/ _ \| \ | / ___| 
 | ||  \| \___ \ | | | |_) | | | | |     | |  | | | | |  \| \___ \ 
 | || |\  |___) || | |  _ <| |_| | |___  | |  | | |_| | |\  |___) |
|___|_| \_|____/ |_| |_| \_\\___/ \____| |_| |___\___/|_| \_|____/ 

Intructions

    Create a file named config.json in the folder where VCML2 is extracted
        an example is provided
    Edit the file and create your source code based on the examples below
    Save the file and run 'python3 dbuild.py'
    After the cluster model is created, add users to the containers by
    running 'python2 duseradd.py' and follow the prompts
    
    VCML2 will return several files to you:
    
        config.vcml - DO NOT DELETE
                        An object file of all compiled information about
                        the model
        hostnames   - An extract of node names and IP Addresses
        hostsd      - An extract of the individual nodes that can
                        be used by mpich and other similar software
        shosts.equiv - Used for SSH configuration

    By examining the hostnames file, pick a node and ssh into the 
    listed address.
    
    Once inside - host based ssh auth is dependant upon using the 
    names listed in either hostnames or hostsd
    
    When your done for the day, exit out and run 'python3 dstop.py'
    
    When your ready to go again run 'python3 dstart.py'
    
    And when you get tire of this model run 'python3 dremove.py'
    
    If you are experiencing problems, you can add '-d' option to
    'dbuild.py' and 'dstart.py' to generate .log files respectively
    with and abundance of information stored in each.
    
    Exit codes:
        0 - success where applicable
        -1 - CLI error
        -2 - File level error
        -3 - Docker command level error
        -4 - Config missing error
        -5 - VCML2 syntax error
        -6 - Docker minimum version error
    
    NOTE - If a build fails, run dremove.py before attempting to
    continue

 _______  __    _    __  __ ____  _     _____ ____  
| ____\ \/ /   / \  |  \/  |  _ \| |   | ____/ ___| 
|  _|  \  /   / _ \ | |\/| | |_) | |   |  _| \___ \ 
| |___ /  \  / ___ \| |  | |  __/| |___| |___ ___) |
|_____/_/\_\/_/   \_\_|  |_|_|   |_____|_____|____/ 

Examples


1. 3 Nodes star configuration with routing between networks

{
    "NETWORKS": {
        "NetA": {
            "driver": "bridge", 
            "subnet": "172.16.0.0/26"
        }, 
        "NetB": {
            "driver": "bridge", 
            "subnet": "172.16.0.64/26"
        }
    }, 


    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m2": {
            "hostname": "m2", 
            "image": "vcml/vcml2",
            "router": true,
            "networks": ["NetA","NetB"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m3": {
            "hostname": "m3", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetB"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        }
    }
}


2. 2 nodes, 2 networks

{
    "NETWORKS": {
        "NetA": {
            "driver": "bridge", 
            "subnet": "172.16.0.0/26"
        }, 
        "NetB": {
            "driver": "bridge", 
            "subnet": "172.16.0.64/26"
        }
    }, 


    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA","NetB"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m2": {
            "hostname": "m2", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA","NetB"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        }
    }
}


3. 2 nodes, 1 network

{
    "NETWORKS": {
        "NetA": {
            "driver": "bridge", 
            "subnet": "172.16.0.0/26"
        }
    }, 

    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m2": {
            "hostname": "m2", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        }
    }
}

4. 1 node on the default network

{
    "NETWORKS": {
    }, 

    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["bridge"]
        }
    }
}


5. Make a network

{
    "NETWORKS": {
        "Net_A": {
            "driver": "bridge", 
            "subnet": "172.16.0.0/26"
        }
    }, 

    "NODES": {}
}
    

6. Complex multi-router config

{
    "NETWORKS": {
        "NetA": {
            "driver": "bridge", 
            "subnet": "172.16.0.0/26"
        }, 
        "NetB": {
            "driver": "bridge", 
            "subnet": "172.16.0.64/26"
        },
        "NetC": {
            "driver": "bridge", 
            "subnet": "172.16.0.128/26"
        },
        "NetD": {
            "driver": "bridge", 
            "subnet": "172.20.0.0/24"
        }

    }, 


    "NODES": {
        "m1": {
            "hostname": "m1", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetA"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m2": {
            "hostname": "m2", 
            "image": "vcml/vcml2",
            "router": true,
            "networks": ["NetA","NetB","NetC"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m3": {
            "hostname": "m3", 
            "image": "vcml/vcml2",
            "router": true,
            "networks": ["NetC","NetD"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m4": {
            "hostname": "m4", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetB"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m5": {
            "hostname": "m5", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetC"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        },
        "m6": {
            "hostname": "m6", 
            "image": "vcml/vcml2",
            "router": false,
            "networks": ["NetD"],
            "volume": "/nfshome/CNL/home/scott:/mydata"
        }
    }
}

